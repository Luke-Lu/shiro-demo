<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan
			base-package="com.shiro.*"></context:component-scan>

	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="jdbc:mysql://localhost:3306/shiro?characterEncoding=utf8"/>
		<property name="username" value="root"/>
		<property name="password" value="123456"/>

	</bean>

	<!-- 约定大于配置 -->
	<!-- 配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource"/>
		<!-- 配置Mybatis全局配置文件 -->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!-- 扫描entity包，使用别名 -->
		<property name="typeAliasesPackage" value="com.shiro.entity"/>
		<!-- 扫描sql配置文件：mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mybatis/*.xml"/>
	</bean>

	<!-- 配置扫描Dao接口包，动态实现Dao接口并注入spring容器中 -->
	<!-- 使用MapperScannerConfigurer是为了防止提前它初始化qlLSessionFactory，而此时可能properties文件还未加载 -->
	<bean id="mybatis" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.shiro.dao"/>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

</beans>
